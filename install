#!/bin/bash
set -e
cd "$(dirname "$0")"
__currentOS=$(echo $OSTYPE);  

function error { echo "Error: $1" >&2; exit 1; }

# Modify these to specify a custom install path
MODULE_PATH="$THEOS/mod/jailed"
TEMPLATE_PATH="$THEOS/templates/ios/kabiroberai"
SUBSTRATE_PATH="/Library/Frameworks/CydiaSubstrate.framework"
SUBSTRATE_VERSION="0.9.6301"
SUBSTRATE="lib/CydiaSubstrate_${SUBSTRATE_VERSION}.framework"

[ -d "$THEOS" ] || error "\"$THEOS\" is not a directory. Aborting…"

echo -e "\n*Choose: \n 1) Install CydiaSubstrate.\nOR \n 2) Install Substitute. \n\nEnter a Number: "
read CHOICE;
if [ "$CHOICE" -eq 1 ]; then
	# Install Substrate
	if [[ ! -d module/$SUBSTRATE ]]; then
		echo "Downloading CydiaSubstrate.framework ($SUBSTRATE_VERSION)…"
		curl -#Lo substrate.deb "http://apt.saurik.com/debs/mobilesubstrate_${SUBSTRATE_VERSION}_iphoneos-arm.deb"
		ar -x substrate.deb data.tar.lzma
		tar --lzma --strip-components 3 -xf data.tar.lzma "${SUBSTRATE_PATH}"
		rm -rf substrate.deb data.tar.lzma 
		# remove any older copies of Substrate and Substitute before moving the new one into place
		rm -rf module/lib/CydiaSubstrate*.framework
		rm -f module/lib/libsubstitute.dylib
		rm -f module/lib/libsubstitute.0.dylib
		mv CydiaSubstrate.framework "module/${SUBSTRATE}"
		echo "Successfully installed CydiaSubstrate.framework"
	fi
		plutil -convert binary1 "module/${SUBSTRATE}/Info.plist" || true
		rm -rf "module/${SUBSTRATE}/Libraries" "module/${SUBSTRATE}/Commands"

elif [ "$CHOICE" -eq 2 ]; then
	if [ $(which lipo) ] && [ $(which install_name_tool) ]; then
		echo -e "lipo and install_name_tool found"
	else
		error "lipo and install_name_tool not found, use Cydiasubstrate instead OR install cctools and try again."
	fi

# find 'com.ex.substitute' | list last one | using "sed" remove everything before '<a href=\" ' , remove everything after the first ' "> ' 
LATEST_SUBSTITUTE="$(wget -q -O - https://apt.bingner.com/debs/1443.00 | grep 'com.ex.substitute' | tail -1 | sed -e 's/.*\<a href=\"//' -e 's/\"\>.*//')"
SUBSTITUTE_PATH="/usr/lib/libsubstitute.dylib"
	if [ -z "${LATEST_SUBSTITUTE}" ]; then
		LATEST_SUBSTITUTE=com.ex.substitute_2.1.0_iphoneos-arm.deb
	fi

# Install Substitute
	if [[ ! -d module/$SUBSTITUTE_PATH ]]; then
		echo "Downloading Substitute ($LATEST_SUBSTITUTE)…"
		curl -#Lo substitute.deb "https://apt.bingner.com/debs/1443.00/${LATEST_SUBSTITUTE}"
		ar -x substitute.deb data.tar.lzma
		tar --lzma --strip-components 2 -xf data.tar.lzma "$SUBSTITUTE_PATH"
		rm -rf substitute.deb data.tar.lzma 
		# thinning the binary to remove arm64e
		lipo -thin arm64 -output libsubstitute.dylib libsubstitute.dylib
		# change LC_ID to run from rpath
		install_name_tool -id "@rpath/libsubstitute.0.dylib" libsubstitute.dylib
		# remove any older copies of Substrate before moving the new one into place
		rm -rf module/lib/CydiaSubstrate_${SUBSTRATE_VERSION}.framework
		rm -f module/lib/libsubstitute.dylib
		rm -f module/lib/libsubstitute.0.dylib
		cp libsubstitute.dylib "module/lib/"
		cp libsubstitute.dylib "module/lib/libsubstitute.0.dylib"
		rm libsubstitute.dylib
		# mv CydiaSubstrate_stub.framework "module/lib/CydiaSubstrate.framework"
		echo "Successfully installed Substitute"
	fi
fi
# Install module
ln -fs "$PWD/update" "module/bin/update"
mkdir -p "$MODULE_PATH"
rm -rf "$MODULE_PATH"/*
cp -a module/* "$MODULE_PATH"
if [ "$CHOICE" -eq 1 ]; then
mv "$MODULE_PATH/${SUBSTRATE}" "$MODULE_PATH/lib/CydiaSubstrate.framework"
rm -rf "${MODULE_PATH}/lib/substitute_CydiaSubstrate.framework" # substitute
rm "${MODULE_PATH}/bin/ipa_substitute.sh"
rm "${MODULE_PATH}/common_substitute.mk"
rm -rf module/lib/CydiaSubstrate_0.9.6301.framework
elif [ "$CHOICE" -eq 2 ]; then
mv "$MODULE_PATH/lib/substitute_CydiaSubstrate.framework" "$MODULE_PATH/lib/CydiaSubstrate.framework"
rm "${MODULE_PATH}/bin/ipa.sh"
mv "${MODULE_PATH}/bin/ipa_substitute.sh" "${MODULE_PATH}/bin/ipa.sh"
rm "${MODULE_PATH}/common.mk"
mv "${MODULE_PATH}/common_substitute.mk" "${MODULE_PATH}/common.mk"
rm -f module/lib/libsubstitute.dylib
rm -f module/lib/libsubstitute.0.dylib
fi
echo "*" > "$MODULE_PATH/.gitignore"
echo "Successfully installed module."

# Install template
"$THEOS/bin/nicify.pl" template 2> /dev/null || error "Failed to nicify template"
mkdir -p "$TEMPLATE_PATH"
rm -rf "$TEMPLATE_PATH"/*
mv *.nic.tar "$TEMPLATE_PATH/jailed.nic.tar"
echo "*" > "$TEMPLATE_PATH/.gitignore"
echo "Successfully installed template."

# Installing Dependencies for linux
if [[ "${__currentOS}" == "linux"*  ]]; then
	   if [ $(which plutil) ]; then
		echo "plutil found";
		elif [ $(which plistutil) ]; then
		echo "plistutil found, attempting to symlink to plistutil"
		ln -si "$(which plistutil)" /usr/local/bin/plutil
		else
		echo -e "plistutil/plutil isn't installed\n"
		read -p "Attempt Install? (Y/n)" TOOL_CHOICE
			case "${TOOL_CHOICE}" in
				N|n)
					error "plistutil/plutil wasn't found and you declined to install. please install (libplist) manually if the automated method fails."
					exit 1;
				;;
				Y|y|*)
					echo "fetching libplist-git"
					curl -#Lo "libplist-git.tar.gz" "https://aur.archlinux.org/cgit/aur.git/snapshot/libplist-git.tar.gz"
					tar -xf libplist-git.tar.gz
					cd libplist-git.tar.gz				
					if [ $(makepkg -sri) ]; then
						ln -si "$(which plistutil)" /usr/local/bin/plutil
					fi
					if [ $(which plutil) ]; then
					echo "Done!!"
					fi
				;;
			esac
   fi
   echo -e "Installing insert_dylib\n"
   curl -#Lo "insert_dylib.zip" "https://github.com/LeanVel/insert_dylib/archive/refs/heads/master.zip"
   unzip "insert_dylib.zip" -d "insert_dylib"
   cd insert_dylib/../
   chmod +x Install.sh
   ./Instll.sh

	echo -e "linking insert_dylib\n"
	ln -sf $(which insert_dylib) $THEOS/mod/jailed/bin/insert_dylib && echo "Success";
	echo -e "addind Linux to target\n"
	cp -r $THEOS/mod/jailed/targets/Darwin $THEOS/mod/jailed/targets/Linux
fi